{"version":3,"sources":["App.tsx","components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/People/People.tsx","components/PeopleList/PeopleList.tsx","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","role","to","HomePage","PageNotFound","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","People","useParams","selectedPerson","born","died","mother","motherName","father","fatherName","PeopleList","persons","map","Loader","PeoplePage","useState","setPersons","isLoading","setIsLoading","isError","setIsError","useEffect","catch","finally","preparedPeople","find","somethingWrong","isLoaded","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0bc7ba34.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nexport const getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink className={getLinkClass} to=\"people\">\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PageNotFound: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={classNames(\n      { 'has-text-danger': person.sex === 'f' },\n    )}\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person,\n};\n\nexport const People: React.FC<Props> = ({ person }) => {\n  const { selectedPerson = '' } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': selectedPerson === person.slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother ? (\n          <PersonLink person={person.mother} />\n        ) : (\n          person.motherName || '-'\n        )}\n      </td>\n      <td>\n        {person.father ? (\n          <PersonLink person={person.father} />\n        ) : (\n          person.fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { People } from '../People';\n\ntype Props = {\n  persons: Person[],\n};\n\nexport const PeopleList: React.FC<Props> = ({ persons }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {persons.map(person => (\n        <People key={person.slug} person={person} />\n      ))}\n    </tbody>\n  </table>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleList } from '../PeopleList';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [persons, setPersons] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(setPersons)\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const preparedPeople = persons.map(person => {\n    return {\n      ...person,\n      mother: persons.find(mother => person.motherName === mother.name),\n      father: persons.find(father => person.fatherName === father.name),\n    };\n  });\n\n  const somethingWrong = isError && !isLoading;\n  const isLoaded = !isError && !isLoading;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {somethingWrong && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!persons.length && isLoaded) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!persons.length && (\n            <PeopleList persons={preparedPeople} />\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\">\n          <Route path=\":selectedPerson?\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<PageNotFound />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n// import { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\n// import { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}